# simple tests
ls
ls tmp
ls -l

#simple io
cat author > tmp
cat < tmp

# env var tests
echo $0 #positional params not implemented
echo ${0} #positional params not implemented
echo $FOO
echo $HOME
echo ${HOME}
echo ${A-FOO} #default params not implemented
echo ${A=FOO} #default assign params not implemented
echo ${A?FOO} #error unset params not implemented
echo ${A+FOO} #alternative params not implemented

#quoting tests
echo \n; cat "foo";
	 	echo 	 	 "\nthis should"	 	"work";
echo	"\"this should"		\"too		;
echo ${} #sh ${}: bad substitution
echo `$((${$("'
echo "asdf"=
echo $((asdf"))=as
echo `asdf`=as
echo `=`
echo "="
echo '='
echo $(=)
echo $((=))
echo \$(invalid)
echo \$((invalid))
echo ${HOME}asdf'echo $HOME'$HOME'ignore$HOME'$HOME
echo \$HOME
echo $(((1 + 2) + 1))
echo "simple";
echo 'foo '"'"'bar'"'"'baz'"'"'bax'"'";
echo $FOO;
echo $(echo bar);
echo 	 	 "\nthis should not;
echo 	 	 "\nthis should not" ';
echo 	 	 "'\nthis should not';
echo \`invalid`
echo $(echo foo);
echo "\"l\
$($("foo"));
$((1 + 1));
echo ${echo foo};
(c)
{c}
echo `echo $HOME`
echo $
echo $(echo $)
echo ""
echo $(echo $HOME)
echo \2>a
# write character 2 into file a
echo 2\>a
# write characters 2>a to STDOUT

# redir tests
exec 6>&1           # Link file descriptor #6 with stdout, save stdout
exec > tmp_out_log     # stdout replaced with file "logfile.txt".
# ----------------------------------------------------------- #
# All output from commands in this block sent to file $LOGFILE.
ls -al
echo; echo
exec 1>&6 6>&-      # Restore stdout and close file descriptor #6.
echo "== stdout now restored to default == "

# pipe tests
ls | head -2
ls | cat | head - 3
echo hello && echo world | tr a-z A-Z
# then you'll get
# hello
# WORLD
# back: tr a-z A-Z upper-cases its input, and you can see that
# only echo world was piped into it
# while echo hello went through on its own.
ls -l -R | grep "\.txt$";

# logical tests
cat foo || echo this
cat author || echo this
cat foo && echo this
cat author && echo this
echo "to stderr" 1>&2;
cat foo || echo not this
echo this && echo and this
echo this && echo and this || echo not this
echo this && cat foo || echo and this
cat foo || echo this && echo and this

# Testing append, inout & dup in/out
cat author >> tmp_aid_test.log
exec 5<> tmp_aid_test.log
cat <&5
exec 5>&-

# test heredoc no fd
#./test/read_from_fd.py 0 <<EOF
# test heredoc orig fd
#./test/read_from_fd.py 0 0<<EOF
# test heredoc new fd
#./test/read_from_fd.py 5 5<<EOF

## interface iteration tests
#ls
# ls
# ls 
#ls -l
# ls -l 
#ls -\
#l
#
#echo "
#
#"
#echo $(
#
#)